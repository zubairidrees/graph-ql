directive @constraint(
    minLength: Int
    maxLength: Int
    min: Float
    max: Float
    pattern: String
    format: String
) on INPUT_FIELD_DEFINITION

# Entity Types
type Department {
    id: ID!
    name: String!
    employees: [Employee]
}

type Employee {
    id: ID!
    name: String!
    position: String!
    department: Department
    tasks: [Task]
}

type Task {
    id: ID!
    description: String!
    employee: Employee
}

# Query: No Constraints Applied Here
type Query {
    departments: [Department]
    employees: [Employee]
    tasks: [Task]
}

# Mutation Inputs with Constraints
input DepartmentInput {
    name: String! @constraint(minLength: 3, maxLength: 50)
}

input EmployeeInput {
    name: String! @constraint(minLength: 2)
    position: String! @constraint(minLength: 3, maxLength: 30)
    departmentId: ID!
}

input TaskInput {
    description: String! @constraint(minLength: 5, maxLength: 100)
    employeeId: ID!
}

# Mutation: Constraints Ensure Valid Input Data
type Mutation {
    createDepartment(input: DepartmentInput): Department
    createEmployee(input: EmployeeInput): Employee
    createTask(input: TaskInput): Task
}

